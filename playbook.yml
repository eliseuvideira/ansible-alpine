---
- name: Setup Alpine Server
  hosts: servers
  remote_user: root
  tasks:
    - name: Setup apk Repositories
      shell: |
        #!/bin/sh
        get_repositories() {
          cat << EOF;
        https://dl-cdn.alpinelinux.org/alpine/v$(cut -d'.' -f1,2 /etc/alpine-release)/main/
        https://dl-cdn.alpinelinux.org/alpine/v$(cut -d'.' -f1,2 /etc/alpine-release)/community/
        https://dl-cdn.alpinelinux.org/alpine/edge/testing/
        EOF
        }
        repositories="$(mktemp)"
        get_repositories >"$repositories"
        if ! cmp -s "$repositories" /etc/apk/repositories; then
          get_repositories >/etc/apk/repositories
          printf "changed"
        else
          printf "unchanged"
        fi
        trap 'rm -f "$repositories"' EXIT
      register: shell_output
      changed_when: shell_output.stdout == "changed"

    - name: Install Packages
      apk:
        name:
          - bash
          - curl
          - docker
          - git
          - htop
          - less
          - make
          - neovim
          - oh-my-zsh
          - rsync
          - stow
          - sudo
          - tmux
          - vim
          - zsh
        update_cache: true
        state: present

    - name: Upgrade apk Packages
      apk:
        upgrade: true

    - name: Install Docker Compose
      shell: |
        #!/bin/sh
        if [ -x /usr/local/bin/docker-compose ]; then
          printf "unchanged"
          exit 0
        fi
        curl -sSL https://github.com/docker/compose/releases/download/v2.4.1/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose
        chmod +x /usr/local/bin/docker-compose
        printf "changed"
      register: res
      changed_when: res.stdout == "changed"

    - name: Enable and Start Docker
      service:
        name: docker
        state: started
        enabled: true

    - name: Create Group 'wheel'
      group:
        name: wheel
        state: present

    - name: Allow 'wheel' to have sudo privileges
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^# %wheel ALL=\(ALL\) NOPASSWD: ALL'
        line: "%wheel ALL=(ALL) NOPASSWD: ALL"
        validate: "/usr/sbin/visudo -cf %s"

    - name: Create User
      user:
        name: "{{ username }}"
        password: "{{ password | password_hash('sha512', password_salt) }}"
        shell: /bin/zsh
        groups: wheel,docker
        append: true
        generate_ssh_key: true
        update_password: always

    - name: Clone and Update .dotfiles
      become: true
      become_user: "{{ username }}"
      git:
        repo: https://github.com/eliseuvideira/.dotfiles-alpine
        dest: ~/.dotfiles
      notify: Install .dotfiles

    - name: Update Hostname
      hostname:
        name: "{{ inventory_hostname }}"
      notify: Restart Hostname

    - name: Configure Cron
      cron:
        name: restart once per week
        job: /sbin/reboot
        minute: "0"
        hour: "2"
        day: "*"
        month: "*"
        weekday: "1"

  handlers:
    - name: Restart Hostname
      service:
        name: hostname
        state: restarted

    - name: Install .dotfiles
      become: true
      become_user: "{{ username }}"
      shell: |
        #!/bin/sh
        cd ~/.dotfiles && make install
